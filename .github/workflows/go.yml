# Building and testing Go
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go CI

permissions:
  contents: read

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  GO_VERSION: 1.24.1
  PKG_SERVICE: "github.com/nanotaboada/go-samples-gin-restful/service"
  PKG_CONTROLLER: "github.com/nanotaboada/go-samples-gin-restful/controller"
  PKG_ROUTE: "github.com/nanotaboada/go-samples-gin-restful/route"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go environment
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache-dependency-path: go.sum

    - name: Install dependencies
      run: |
        go mod tidy
        go get .

    - name: Compile packages and dependencies
      run: |
        go build -v ./...

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Lint commit messages
      uses: wagoid/commitlint-github-action@v6

    - name: Set up Go environment
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache-dependency-path: go.sum

    - name: Run tests and generate coverage report
      run: |
        go test -v ./... \
          -coverpkg=${{ env.PKG_SERVICE }},${{ env.PKG_CONTROLLER }},${{ env.PKG_ROUTE }} \
          -covermode=atomic \
          -coverprofile=coverage.out

    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage.out
        path: ./coverage.out
        overwrite: true

  coverage-codecov:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download coverage report artifact
      uses: actions/download-artifact@v4
      with:
        name: coverage.out

    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: coverage.out

  coverage-codacy:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download coverage report artifact
      uses: actions/download-artifact@v4
      with:
        name: coverage.out

    - name: Upload coverage report to Codacy
      uses: codacy/codacy-coverage-reporter-action@v1.3.0
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        language: go
        force-coverage-parser: go -r coverage.out
