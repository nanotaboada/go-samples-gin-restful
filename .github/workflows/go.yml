# Building and testing Go
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go CI

permissions:
  contents: read

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  GO_VERSION: 1.24.1
  PKG_SERVICE: "github.com/nanotaboada/go-samples-gin-restful/service"
  PKG_CONTROLLER: "github.com/nanotaboada/go-samples-gin-restful/controller"
  PKG_ROUTE: "github.com/nanotaboada/go-samples-gin-restful/route"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5.0.0

    - name: Set up Go environment
      uses: actions/setup-go@v5.5.0
      with:
        go-version: ${{ env.GO_VERSION }}
        cache-dependency-path: go.sum

    - name: Install dependencies
      run: |
        go mod tidy
        go get .

    - name: Compile packages and dependencies
      run: |
        go build -v ./...

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5.0.0

    - name: Lint commit messages
      uses: wagoid/commitlint-github-action@v6.2.1

    - name: Set up Go environment
      uses: actions/setup-go@v5.5.0
      with:
        go-version: ${{ env.GO_VERSION }}
        cache-dependency-path: go.sum

    - name: Run tests and generate coverage report
      run: |
        go test -v ./... \
          -coverpkg=${{ env.PKG_SERVICE }},${{ env.PKG_CONTROLLER }},${{ env.PKG_ROUTE }} \
          -covermode=atomic \
          -coverprofile=coverage.out

    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: coverage.out
        path: ./coverage.out
        overwrite: true

  coverage:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [codecov, codacy]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Download coverage report artifact
        uses: actions/download-artifact@v5.0.0
        with:
          name: coverage.out

      - name: Upload coverage report to ${{ matrix.service }}
        if: ${{ matrix.service == 'codecov' }}
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.out

      - name: Upload coverage report to ${{ matrix.service }}
        if: ${{ matrix.service == 'codacy' }}
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          language: go
          force-coverage-parser: go -r coverage.out

  container:
    needs: coverage
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Build and push Docker image to GitHub Container Registry
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          platforms: linux/amd64
          provenance: false
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:sha-${{ github.sha }}
